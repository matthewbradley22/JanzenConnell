#Load packages
library(tidyverse) 
library(gridExtra) 

parameters = NULL
parameters = data.frame(seq(from=0.4, to=1.6, by=0.1), rev(seq(from=0.4, to=1.6, by=0.1)),seq(from=0.1, to=1.3, by=0.1),rev(seq(from=0.1, to=1.3, by=0.1)))
colnames(parameters) = c("growth_1","growth_2","infection_1","infection_2")
runtimes = nrow(parameters)

quartz()
par(mfrow=c(4,4)) 

coexistence_time = matrix(nrow = runtimes, ncol = 1)
coexistence_pattern = matrix(nrow = runtimes, ncol = 2)

for(run in 1:runtimes) {

### Initialize params ###
# Set up a grid to represent land
#Place individuals on plot
xsize = ysize = 100

numInd = 100
numSpecies = 2
data <-  tibble("ID" = 1:numInd, "age" = 3, 
                species = sample(numSpecies, numInd, replace = TRUE), "xlocation" = runif(numInd, 0, 100), 
                "ylocation" = runif(numInd,0,100), "parentalDistance" = 0, "Pathogen" = 0)

#Choose an initial 25% of population to be infected
infected <- sample(numInd, numInd/4)
data$Pathogen[which(data$ID %in% infected)] <- 1

#plot(data$xlocation, data$ylocation, col = data$species, pch = 20, xlim = c(1,100), ylim = c(1,100),
     #xlab = "X-Coord", ylab = "Y-Coord", main = "Initial Trees")

#Set up rates of birth/death/growth etc...
deltaT = 1 #1 year periods of growth
ageChange = deltaT
dispParam = 8 #dispersalParam
uniqueSp = unique(data$species)
numYears = 1000

#Carrying Capacity
K= 2000

# Can be anywhere from ~0.2 to ~3. Once its above ~1 you get the total population having a small oscillation above and below carrying capacity 
#and program gets a fair bit slower as you near 3
#initially set at 1
growthRate1 = parameters[run,1]
growthRate2= parameters[run,2]
  
#Pathogen initials
#This is how far away a tree can be infected. But its a torus so setting the value to 100 does not man 
#every tree is infected. best values seem to be between 2.5 and 3 (for infected death rate around 0.03)
#Too low and pathogens go extinct, too high and all trees quickly pathogenized
#initially set at 0.7 
PathDensParam = 2.7

infectionRate1 = parameters[run,3]
infectionRate2 = parameters[run,4]

#Has to stay lower than infected death rates. Slows growth to carrying capacity as it gets larger but
# tree dynamics seem to be similar between 0.01 and 0.05, but pathogens end up growing much slower
#and have larger swings as death rates increase
healthyDeathRate = 0.02

#Dynamics get much more variable when value is ~0.04 or more. 0.02-0.04 pretty good
infectedDeathRate1 = 0.05
infectedDeathRate2 = 0.05
# Used for summary statistics
speciesPopulation = NULL
pathPop = NULL
agePops = NULL
pathAgePop = NULL
denseSpecies <- NULL

### MAIN LOOP ####

for(t in seq(0, numYears, by = deltaT)){ 
  
  #disperse seed
  adults <- data[data$age > 3, ]
  seedsPerSpecies <- NULL
  for (i in 1:numSpecies){
    speciesPop = nrow(data[data$species == i,])
    numSeeds <- carryingCapacity(i, speciesPop, nrow(data), K)
    seedsPerSpecies <- c(seedsPerSpecies, numSeeds)
  }
  Ind = data[1, ]
  babies <- dispersal(adults)
  data <- bind_rows(data, babies)
  
  #Background death of adults. Death rate decreases with age
  data <- backgroundDeath(data)
  
  #Count number of each species
  countSpecies <- speciesSize(data$species)
  speciesPopulation <-  bind_rows(speciesPopulation, countSpecies)
 
  #pathogens reproduce
  newPathogens <- pathGrowth(data)
  data$Pathogen[which(data$ID %in% newPathogens$ID)] <- 1
  
  #Supplemental
  countPaths <- data[data$Pathogen==1,]
  pathAges <- speciesSize(countPaths$species)
  pathPop <- bind_rows(pathPop, pathAges)
  
  #Supp  functions/Statistics
  ages <- tibble("gen" = t, "babies" = nrow(subset(data, age < 6)), "young" = nrow(subset(data, age >= 6 & age <=20)), "middle aged" = nrow(subset(data, age > 20 &
                                                                                                                                                     age < 50)), 
                 "old" = nrow(subset(data, age >= 50)))
  agePops <- bind_rows(agePops, ages)
  
  
  #These fucntions plot the trees every generation. I mainly use these when trying to
  #paramterize something so I can see the effects on several generations. Otherwise comment them out
  
  #plot(data$xlocation, data$ylocation, col = data$species, pch = 20, xlim = c(1,100), ylim = c(1,100),
   #    main = "Tree Population", ylab = "Count", xlab = "Generation")
  
  print(t)
  
  #Grow
  data$age = data$age + deltaT
  
  if(t == 500) {
    speciesPopulation = as.data.frame(speciesPopulation); speciesPopulation = cbind(speciesPopulation, c(1:nrow(speciesPopulation)))
    plot(speciesPopulation[,4],speciesPopulation[,1], ylim = c(0,3000), main = bquote(paste("g1=", .(growthRate1)," - I1=", .(infectionRate1)," - G2=", .(growthRate2)," - I2=", .(infectionRate2))), xlab = " ", ylab = " " )
    points(speciesPopulation[,4],speciesPopulation[,2], col = "red")
    coexistence_time[run] = 500; coexistence_pattern[run,] = c(tail(speciesPopulation[6,1]),tail(speciesPopulation[6,2]))
    break
  }
  
  if(t > 3 & tail(speciesPopulation[,1]) < 1 || tail(speciesPopulation[,2]) < 1) {
    speciesPopulation = as.data.frame(speciesPopulation); speciesPopulation = cbind(speciesPopulation, c(1:nrow(speciesPopulation)))
    plot(speciesPopulation[,4],speciesPopulation[,1], ylim = c(0,3000), main = bquote(paste("g1=", .(growthRate1)," - I1=", .(infectionRate1)," - G2=", .(growthRate2)," - I2=", .(infectionRate2))), xlab = " ", ylab = " " )
    points(speciesPopulation[,4],speciesPopulation[,2], col = "red")
    coexistence_time[run] = t; coexistence_pattern[run,1] = as.numeric(tail(speciesPopulation[6,1])); coexistence_pattern[run,2] = as.numeric(tail(speciesPopulation[6,2]))
    break}
}

}

